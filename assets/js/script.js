// --- 1. Sele√ß√£o dos Elementos ---
// Inputs do formul√°rio
const cardholderNameInput = document.getElementById("nome-input");
const cardNumberInput = document.getElementById("num-input");
const expMonthInput = document.getElementById("mes-input");
const expYearInput = document.getElementById("ano-input");
const cvcInput = document.getElementById("cvc-input");

// Elementos de exibi√ß√£o no cart√£o
const displayName = document.getElementById("nome");
const displayNumber = document.getElementById("num");
const displayDate = document.getElementById("date");
const displayCvc = document.getElementById("cvc");

// NOVO: Seleciona o √≠cone do "olho" que deve estar no seu HTML
const toggleVisibilityButton = document.getElementById("toggle-visibility");



const areaFormulario = document.getElementById('area-formulario'); 
const completeDiv = document.getElementById('complete'); 

// --- 2. Fun√ß√µes Auxiliares ---

/**
 * Formata uma string de n√∫meros com espa√ßos a cada 4 d√≠gitos.
 * Ex: "1234567890123456" => "1234 5678 9012 3456"
 */
function formatCardNumber(numberString) {
  if (!numberString) {
    return "0000 0000 0000 0000";
  }
  const chunks = numberString.match(/.{1,4}/g) || [];
  return chunks.join(' ');
}

/**
 * Mascara um n√∫mero de cart√£o, exibindo apenas os √∫ltimos 3 d√≠gitos.
 * Ex: "1234567890123456" => "*************456"
 */
function maskCardNumber(numberString) {
  if (!numberString || numberString.length <= 3) {
    return numberString;
  }
  const lastThreeDigits = numberString.slice(-3);
  const maskedPart = "*".repeat(numberString.length - 3);
  return maskedPart + lastThreeDigits;
}


// --- 3. L√≥gica em Tempo Real ---

// MUDAN√áA: Agora este listener APENAS filtra as letras do input.
cardNumberInput.addEventListener('input', () => {
  // Remove qualquer caractere que n√£o seja um n√∫mero
  let cleanedValue = cardNumberInput.value.replace(/\D/g, '');
  cardNumberInput.value = cleanedValue;
  
  // A linha que atualizava o cart√£o em tempo real foi REMOVIDA, como voc√™ pediu.
});

// NOVO: L√≥gica para o bot√£o do "olho" revelar/esconder o n√∫mero
toggleVisibilityButton.addEventListener('click', () => {
  if (cardNumberInput.type === 'password') {
    cardNumberInput.type = 'text';
    toggleVisibilityButton.textContent = 'üôà'; // Muda o √≠cone (opcional)
  } else {
    cardNumberInput.type = 'password';
    toggleVisibilityButton.textContent = 'üëÅÔ∏è'; // Volta o √≠cone original (opcional)
  }
});


// --- 4. Fun√ß√£o Principal de Confirma√ß√£o ---

function confirmar() {
  const nameValue = cardholderNameInput.value;
  const cardValue = cardNumberInput.value;
  const monthValue = expMonthInput.value;
  const yearValue = expYearInput.value;
  const cvcValue = cvcInput.value;

  // --- √ÅREA DE VALIDA√á√ÉO ---
  if (cardValue.length !== 16) {
    alert("O n√∫mero do cart√£o deve ter exatamente 16 d√≠gitos.");
    return; // Para a execu√ß√£o da fun√ß√£o aqui
  }
  if (cvcValue.length !== 3) {
    alert("O CVC deve ter exatamente 3 d√≠gitos.");
    return;
  }
  if (!nameValue || !monthValue || !yearValue) {
    alert("Por favor, preencha todos os campos.");
    return;
  }
  
  // --- SE PASSOU NA VALIDA√á√ÉO, RENDERIZA E MASCARE OS DADOS ---

  alert("Cart√£o adicionado com sucesso!");

  displayName.textContent = nameValue || "Jane Appleseed";
  
  // MUDAN√áA: Renderiza o CVC com asteriscos
  displayCvc.textContent = "*".repeat(cvcValue.length || 3);
  
  displayDate.textContent = `${monthValue || "00"}/${yearValue || "00"}`;

  // Exibe o n√∫mero MASCARADO no cart√£o ap√≥s o sucesso
  displayNumber.textContent = maskCardNumber(cardValue);
  areaFormulario.style.display = 'none';
  completeDiv.style.display = 'flex'; 
}






// --- 2. FUN√á√ÉO PARA VOLTAR AO ESTADO INICIAL ---
function resetarFormulario() {
    // Oculta a div de sucesso
    completeDiv.style.display = 'none'; 
    
    // Exibe novamente o formul√°rio
    areaFormulario.style.display = 'flex'; // ou 'block', dependendo de como voc√™ estilizou 'area-formulario'

    // Opcional: Limpa os campos do formul√°rio
    form.reset(); 
    
    // Opcional: Resetar os n√∫meros exibidos no cart√£o para "0000 0000..."
    // (Isso depende de como voc√™ lida com os valores padr√£o no seu JS de interatividade)
}


function recarregarPagina() {
    window.location.reload();
}

// Opcional: Adicionar um ouvinte para o bot√£o de confirma√ß√£o, se ele for um bot√£o normal e n√£o um submit.
// document.getElementById('button-confirm').addEventListener('click', validarFormulario);
